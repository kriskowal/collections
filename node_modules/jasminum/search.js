"use strict";

var glob = require("glob");
var fs = require("fs");
var path = require("path");

module.exports = search;
function search(args) {
    return args.reduceRight(function (next, arg) {
        return function (list) {
            return stat(arg).then(function (stats) {
                if (stats.isFile()) {
                    return realpath(arg)
                    .then(function (realpath) {
                        list.push(realpath);
                        return next(list);
                    });
                } else if (stats.isDirectory()) {
                    return pglob(path.join(process.cwd(), arg, "**/*-{spec,test}.js"))
                    .then(function (files) {
                        list.push.apply(list, files);
                        return list;
                    });
                } else {
                    throw new Error("Arg must be a directory or file: " + arg);
                }
            });
        };
    }, function (list) {
        return Promise.resolve(list);
    })([]);
}

function stat(path) {
    return new Promise(function (resolve, reject) {
        fs.stat(path, function (err, stats) {
            if (err != null) {
                reject(err);
                return;
            }
            resolve(stats);
        });
    });
}

function realpath(path) {
    return new Promise(function (resolve, reject) {
        fs.realpath(path, function (err, realpath) {
            if (err != null) {
                reject(err);
                return;
            }
            resolve(realpath);
        });
    });
}

function pglob(pattern) {
    return new Promise(function (resolve, reject) {
        glob(path, function (err, files) {
            if (err != null) {
                reject(err);
                return;
            }
            resolve(files);
        });
    });
}

